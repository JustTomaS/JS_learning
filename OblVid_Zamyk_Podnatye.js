console.log("Область видимости, поднятие, замыкание");       //Область видимости, поднятие, замыкание


console.log("Что такое область видимости");
console.log("Область видимости - это часть контекста выполнения,");
console.log("в котором эта переменная существует.");
console.log("Область видимости определяет, есть ли у вас доступ к переменной в данном контексте выполнения.");
console.log("Переменные могут иметь локальную или глобальную область видимости.");


console.log("Что такое замыкание");
console.log("Замыкание – это функция, которая запоминает свои внешние переменные и может получить к ним доступ.");


console.log("Что такое  поднятие");
console.log("Поднятие - особенность переменной старого типа var.");
console.log("Переменная перемещается в начале функции/скрипта, независимо от того,");
console.log("где она была объявлена");


console.log("Реализовать инкапсуляцию");

(function() { 
  var loc_per = '';

  function someFunc () {
     console.log('Hi: ' + loc_per);
  }

  loc_per = 'Kate!';
  someFunc();

  console.log(typeof loc_per);         //строка
  console.log(typeof someFunc);        //функция
}) 
();

console.log(typeof loc_per);           //неопределено
console.log(typeof someFunc);          //неопределено
/*
переменная loc_per и функция someFunc не будут доступны нигде, т.к. все хранится в отдельной области видимости
после самозапуска функции
*/

