console.log("Циклы");                                                               //Циклы

console.log("Цикл, который будет выводить число а, пока оно не станет меньше 10");  //Цикл, который будет выводить число а, пока оно не станет меньше 10

console.log("Вариант 1");
let a1 = 15;
do {
  console.log (a1);
  a1--;
}
while (a1 > 10);

console.log("Вариант 2");
for (let a2 = 15; a2 > 10; a2--){
  console.log (a2);
}

console.log("Вариант 3");
let a3 = 15;
while (a3 > 10) console.log(a3--);


console.log("Последнее значение цикла");

console.log("Какое последнее значение выведет этот код? Почему?");
console.log("let i = 3;");
console.log("while (i) {");
console.log("alert( i-- );");
console.log("}");
console.log("Ответ: последнее значение будет 1");
console.log("Последовательно выводится 3 - 2 - 1");
console.log("т.к. while(i) означает не равно нулю");
console.log("работа цикла прекращается при итерации, когда условие становится true");

console.log("Какие значения выведет цикл while?");

console.log("Префиксный вариант ++i:");
console.log("let i = 0;");
console.log("while (++i < 5) alert( i );");
console.log("Ответ: от 1 до 4, т.к. в случае префиксной формой сначала происходит");
console.log("увеличение i, а затем выполняется условие");

console.log("Постфиксный вариант i++:");
console.log("let i = 0;");
console.log("while (i++ < 5) alert( i );");
console.log("Ответ: от 1 до 5, т.к. в случае постфиксной формой при увеличении i");
console.log("в сравнении участвует прошлое значение, но 0 отпадает, т.к. 1-е действие - это условие");
console.log("2-е увеличение на единицу и вывод значения");

console.log("Какие значения выведет цикл for?");

console.log("Постфиксный вариант i++:");
console.log("for (let i = 0; i < 5; i++) alert( i );");     //i=0 начало, затем условие, затем шаг, пока условие true, будет выводится i
console.log("Ответ: от 0 до 4");                        

console.log("Префиксный вариант ++i:");
console.log("for (let i = 0; i < 5; ++i) alert( i );");    //аналогичная ситуация с прошлым вариантом, форма не влияет на результат
console.log("Ответ: от 0 до 4");


console.log("Выведите чётные числа");
console.log("При помощи цикла for выведите чётные числа от 2 до 10.");

for (let x = 2; x <= 10; x++) {
  if (x % 2 == 0) {;
    console.log(x);
  }
  };

console.log("Замените for на while");
/*
for (let i = 0; i < 3; i++) {                                               //заданный цикл
  console.log( `number ${i}!` );
  }
*/
let y = 0;
while (y < 3) {  
  console.log( `number ${y}!` );
y++;  
}

console.log("Повторять цикл, пока ввод неверен");
console.log("Напишите цикл, который предлагает prompt ввести число, большее 100. Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.");
console.log("Цикл должен спрашивать число пока либо посетитель не введёт число, большее 100, либо не нажмёт кнопку Отмена (ESC).");
console.log("Предполагается, что посетитель вводит только числа. Предусматривать обработку нечисловых строк в этой задаче необязательно.");

console.log("Решение");
let chislo;
do {
  chislo = prompt("Введи число больше 100", 0)
}
 while (chislo <= 100 && chislo);

console.log("Вывести простые числа");

console.log("Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.");
console.log("Другими словами, n > 1 – простое, если при его делении на любое число кроме 1 и n есть остаток.");
console.log("Например, 5 это простое число, оно не может быть разделено без остатка на 2, 3 и 4.");
console.log("Напишите код, который выводит все простые числа из интервала от 2 до n.");
console.log("Для n = 10 результат должен быть 2,3,5,7.");

console.log("Решение");
let n = 10;
point: for (let l = 2; l <= n; l++) {             //делаем метку для прерывания цикла
  for (let k = 2; k < l; k++) {                   //вложенный цикл для определения возможности деления
    if (l % k == 0) continue point                //условие с прерыванием по метке
    }
 console.log(l);                                  //выводим результат
}